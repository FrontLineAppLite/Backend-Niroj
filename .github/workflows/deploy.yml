name: Build & Deploy to ECS (Production)

on:
  push:
    branches: ["main"]  # or ["master"] if your default branch is named "master"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out your repository code
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials using the secrets we created
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # or your region

      # Step 3: Log in to ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 \
          | docker login --username AWS \
          --password-stdin 977098993462.dkr.ecr.us-east-2.amazonaws.com

      # Step 4: Build and tag your Docker image
      - name: Build Docker image
        run: |
          docker build -t auth-microservice .
          docker tag auth-microservice:latest 977098993462.dkr.ecr.us-east-2.amazonaws.com/auth-microservice:latest

      # Step 5: Push the image to ECR
      - name: Push to ECR
        run: |
          docker push 977098993462.dkr.ecr.us-east-2.amazonaws.com/auth-microservice:latest

      # Step 6: Deploy to ECS
      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster ecs-prod-cluster \
            --service auth-service-prod \
            --force-new-deployment \
            --region us-east-2
